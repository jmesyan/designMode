<?php
/**
 * Created by PhpStorm.
 * User: Jmesyan
 * Date: 2017/3/23
 * Time: 17:54
 */

interface Shape{
    public function draw();
}

class Circle implements Shape{
    public function draw(){
        var_dump("shape:Circle");
    }
}

class Rectangle implements Shape{
    public function draw()
    {
        // TODO: Implement draw() method.
        var_dump("shape:Rectangle");
    }
}

abstract class ShapeDector implements Shape{
     protected $shape;
     public function __construct($shape)
     {
         $this->shape=$shape;
     }

     public function draw(){
         $this->shape->draw();
     }
}

class RedShapeDector extends ShapeDector{
       public function __construct($shape)
       {
           parent::__construct($shape);
       }

       public function draw()
       {
           parent::draw(); // TODO: Change the autogenerated stub
           $this->setRedBorder($this->shape);
       }

    public function setRedBorder($shape){
           var_dump("Border Color:Red");
       }
}

//demo
$circle=new Circle();
$redCircle=new RedShapeDector(new Circle());
$redRectangle=new RedShapeDector(new Rectangle());
var_dump("Circle with normal border");
$circle->draw();
var_dump("Circle with red border");
$redCircle->draw();
var_dump("Rectangle with red border");
$redRectangle->draw();


